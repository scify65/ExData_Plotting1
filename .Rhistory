pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
?rbind
source("Complete.R")
complete("specdata")
return data
complete("specdata")
source("Complete.R")
complete("specdata")
source("Complete.R")
complete("specdata")
source("Complete.R")
complete("specdata")
complete("specdata",1)
files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
file<-read.csv("specdata/001.csv")
nobs<-length(file$ID)
nobs<-is.numeric(length(file$ID))
nobs<-numeric(length(file$ID))
nobs<-length(file$ID)
id<-file("ID")
id<-file["ID"]
id<-1
data<-rbind(id,nobs)
data
data<-cbind(id,nobs)
data
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("Complete.R")
complete("specdata",c(2,4,8,10,12))
complete("specdata",2)
complete("specdata",3)
complete("specdata",4)
num<-"specdata/001.csv"
file<-read.csv(num)
good<-complete.cases(file)
completes<-file[good,]
nobs<-length(completes$ID)
data<cbind(id,nobs)
id<-1
data<cbind(id,nobs)
list(i)
list(id)
data<cbind(id,nobs)
source("Complete.R")
complete("specdata",1)
data<-data.frame(id,nobs)
data
data<-data.frame(id,nobs)
data<-data.frame(id=numeric(n),nobs=numeric(n))
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
nobs<-vector()
nobs<-c(nobs,2)
nobs<-c(nobs,4)
nobs<-c(nobs,5)
nobs<-vector()
id<-1
for (i in seq_along(id)) {
x<-117
nobs<-c(nobs,x)
}
id<-c(2,4,6,8)
for (i in seq_along(id)) {
x<-117
nobs<-c(nobs,x)
id<-c(id,i)
}
data<-cbind(id,nobs)
source("Complete.R")
complete("specdata",1)
source("Complete.R")
complete("specdata",1)
file<-read.csv("specdata/001.csv")
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes$id)
file<-read.csv("specdata/001.csv")
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes[id])
file<-read.csv("specdata/001.csv")
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes["id"])
file<-read.csv("specdata/001.csv")
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes$ID)
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("Complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
id<-c(2,4,8,10,12)
for (i in id) {
y<c(y,id)
}
y<-vector()
for (i in id) {
y<c(y,id)
}
files<-list.files(specdata, full.names=TRUE)
files<-list.files("specdata", full.names=TRUE)
nobs<-vector()
y<-vector()
for (i in id) {
file<-read.csv(files[i])
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes$ID)
nobs<-c(nobs,x)
y<-c(y,id)
nobs, y
}
for (i in id) {
file<-read.csv(files[i])
good<-complete.cases(file)
completes<-file[good,]
x<-length(completes$ID)
nobs<-c(nobs,x)
y<-c(y,id)
}
source("complete.R")
source("complete.R")
complete("specdata")
complete("specdata")
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4))
source("complete.R")
complete("specdata",c(2,4))
source("complete.R")
complete("specdata",c(2,4))
complete("specdata",30:25)
complete("specdata",3)
?cor
file<-read.csv("specdata/004.csv")
x<-file[[ID]]
x<-file$ID
x<-file[[1,ID]]
x<-file[[1,"ID"]]
numeric(x)
x<-numeric(x)
x<-file[[1,"ID"]]
as.numeric(x)
x<-as.numeric(x)
source("corr.R")
source("corr.R")
cr<-corr("specdata",150)
file<-read.csv("specdata/001.csv")
good<-complete.cases(file)
completes<-file[good,]
threshold<-100
if (length(completes)>threshold) {
x<-c(x,cor(completes$nitrate,completes$sulfate))
}
length(completes)
length(completes$ID)
if (length(completes$ID)>threshold) {
x<-c(x,cor(completes$nitrate,completes$sulfate))
}
x<-vector()
if (length(completes$ID)>threshold) {
x<-c(x,cor(completes$nitrate,completes$sulfate))
}
source("corr.R")
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr<-corr("specdata",400)
head(cr)
summary(cr)
cr<-corr("specdata",50003)
cr<-corr("specdata",5000)
head(cr)
summary(cr)
?is.logical
source("corr.R")
cr<-corr("specdata",5000)
summary(cr)
length(cr)
cr<-corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
source("complete.R"
)
complete("specdata",1)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("complete.R")
complete("specdata",1)
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files()
?list.files
args(list.files)
old.dir<-getwd()
mkdir("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.access("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
mkdir("testdir2")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3",recursive=TRUE)
dir.remove("testdir2",recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",rtecursive=TRUE)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(.5,55,-10,6)
tf<-num_vect<1
tf
num>=6
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name(my_char, "Scify")
my_name<-c(my_char, "Scify")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
3*x
y<-rnorm(1000)
z<rep(NA,1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[x(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
d<-matrix(nrow=2,ncol=3)
e<-solve(d)
dim(d)
dim(d)[2]
if (dim(d)[1]!=dim(d)[2]) {
print("Error!")
}
if (dim(d)[1]=dim(d)[2]) {
print("Error!")
}
if (dim(d)[1]==dim(d)[2]) {
print("Error!")
}
install.packages("installer")
library(xlsx)
library(httr)
oath_endpoints("github")
oauth_endpoints("github")
?oauth2.0_token
?stop_for_status
myapp<-oauth_app("github",key="ad379f7d3aa98d560626",secret="50b9c879b6892be65397688e15eb6249dd6c55c3")
github_token<-oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "ad379f7d3aa98d560626",
secret = "50b9c879b6892be65397688e15eb6249dd6c55c3")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken<-config(token=github_token)
req<-GET("https://api.github.com/rate_limit",gtoken)
stop_for_status(req)
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
req
?oauth_endpoint
?oauth_endpoints
?ouath_app
?oauth_app
myapp<-oauth_app("github",key="ad379f7d3aa98d560626",secret="50b9c879b6892be65397688e15eb6249dd6c55c3")
github_token<-oauth2.0_token(oauth_endpoints("github"), myapp)
req<-GET("https://github.com/login/oauth/authorize?client_id=ad379f7d3aa98d560626&scope=&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&response_type=code",gtoken)
req
import(httr)
packages.import(httr)
import.packages(httr)
?import
??import
install.packages(httr)
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
?summarize
summarize(by_package,mean(size))
?n
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count,probs=.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,unique)
top_unique_sorted<-arrange(top_unique,desc(unique)
)
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
submit()
students3
play()
i=20
View(students2)
for x in range(17):
for x in range(17) {
i<-i*1.05
print i
}
for x in range(17) {
i<-i*1.05
print(i)
}
?range
x<-0
while (x<17) {
i<-i*1.05
print(i)
}
while (x<17) {
i<-i*1.05
print(i)
x<-x+1
}
x<-20
while (x<17) {
i<-i*1.05
print(i)
x<-x+1
}
x<-0
i<-20
while (x<17) {
i<-i*1.05
print(i)
x<-x+1
}
setwd("ExData_Plotting1")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot4.R")
source("plot3.R")
source("plot2.R")
